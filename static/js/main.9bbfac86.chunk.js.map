{"version":3,"sources":["img/my-portfolio.png","img/todolist.png","components/work.js","components/skill.js","components/about.js","appbar.js","serviceWorker.js","index.js","components/home.js"],"names":["module","exports","Portfolio","props","className","children","MyPortfolios","portfolio","title","img","require","language","explanation","alt","url","map","item","index","key","href","src","Skill","Contact","Profile","Headerbar","AppBar","to","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","exact","path","component","skillsItem","skill","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9bbfac86.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/my-portfolio.293b2789.png\";","module.exports = __webpack_public_path__ + \"static/media/todolist.47189213.png\";","import React from 'react';\nimport './css/work.css';\n\n\nfunction Portfolio(props) {\n  return (\n    <div className=\"portfolio\">\n      {props.children}\n    </div>\n  );\n}\n\nfunction MyPortfolios() {\n  const items = [\n    { title: 'My-Portfolio', img: require('../img/my-portfolio.png'), language: 'React.js', explanation: '初ライブラリ使用作品。Reactを２週間勉強し、５日で作成しました。', alt: 'ポートフォリオの写真です', url: '' },\n    { title: 'Todolist', img: require('../img/todolist.png'), language: 'HTML/CSS/JavaScript/PHP/MySQL', explanation: '初作品のCRUDアプリ。制作期間１週間。Herokuを使ってデプロイしました。', alt: 'todolistアプリの写真です', url: 'https://mytodolist-app-1.herokuapp.com/' },\n  ];\n\n  const portfolio = items.map( (item, index) => {\n    return (\n      <Portfolio key={index}>\n        <a href={item.url}>\n          <img src={item.img} alt={item.alt} />\n          <div className=\"portfolio-inner\">\n            <h2>{item.title}</h2>\n            <p>使用言語／ライブラリ: {item.language}</p>\n            <p>{item.explanation}</p>\n          </div>\n        </a>\n      </Portfolio>\n    );\n  });\n  return (\n    <div className=\"portfolio-container\">\n      <h1>My Works</h1>\n      <div className=\"portfolio-wrapper\">\n        {portfolio}\n      </div>\n    </div>\n  );\n}\n\nfunction Work() {\n  return (\n    <div className=\"work\">\n      <MyPortfolios />\n    </div>\n  );\n}\n\nexport { Work };\n","import React from 'react';\nimport './css/skill.css';\n\nfunction Skill(props) {\n  return (\n    <div className=\"skill-card\">\n      {props.children}\n    </div>\n  );\n}\n\nfunction Skills() {\n  const skills = [\n    { title: 'HTML/CSS', explanation: '既存のサイト模写をしてコーディング方法を学びました。Sass も少し勉強済。' },\n    { title: 'JavaScript (ES8)', explanation: 'プログラミング言語の基礎共通点を学び、ドットインストールでミニゲームアプリを作りながらDOM操作を学びました。' },\n    { title: 'PHP', explanation: 'データの受け取りやCSRF対策、基本的なSQLとのデータのやりとりを学び、簡単なToDoリストアプリを作成しました。' },\n    { title: 'SQL', explanation: 'MySQLで基本的な処理を学びました。' },\n    { title: 'Git / GitHub', explanation: 'ローカルリポジトリにコミットし、完成したものをリモートリポジトリにプッシュする基本的な処理を学びました。' },\n  ];\n\n\n  const skillsItem = skills.map((skill, index) => {\n    return (\n      <Skill key={index}>\n        <h3>{skill.title}</h3>\n        <p>{skill.explanation}</p>\n      </Skill>\n    );\n  })\n\n\n  return (\n    <div className=\"skill-container\">\n      <span>独学したで習得したスキル</span>\n        <div className=\"skill-wrapper\">\n            {skillsItem}\n      </div>\n      <span>目標</span>\n      <div className=\"target-skill-card\">\n        <p>UI / UX を理解し、積極的に色々なことに挑戦するフロントエンドエンジニアを目指しています。</p>\n      </div>\n    </div>\n  );\n}\n\nexport { Skills };\n","import React from 'react';\nimport './css/about.css';\n\nfunction Contact() {\n  return (\n    <div className=\"contact\">\n      <h2>Contact</h2>\n      <div>\n        <address>\n          <span>aktsm0ysn0p@gmail.com</span>\n        </address>\n        <p>※問い合わせフォームは準備中です</p>\n      </div>\n    </div>\n  );\n}\n\nfunction Profile() {\n  return (\n    <div className=\"profile\">\n      <h2>About Me</h2>\n      <div>\n        <p>\n          Name: Aika Takada\n        <br />\n        Birthday: 1996/10/09\n        <br />\n        Career: 接客業を中心に働いてきました。IT業界未経験。\n        <br />\n        Hobby: YouTube、ゲーム、ナルト、散歩\n        <br />\n        GitHub: <a href=\"https://github.com/aktsm0ysn0p\">https://github.com/aktsm0ysn0p</a>\n        </p>\n      </div>\n\n    </div>\n  );\n}\n\nfunction About() {\n  return (\n    <div className=\"about-container\">\n      <Profile />\n      <Contact />\n    </div>\n  );\n}\n\nexport { About };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n// import { Work } from './components/work';\n// import { Skills } from './components/skill';\n// import { About }  from './components/about';\n\nfunction Headerbar(props) {\n  return (\n    <div className=\"app-header\">\n      <header>\n        {props.children}\n      </header>\n    </div>\n  );\n}\n\nclass AppBar extends React.Component {\n  render() {\n    return (\n      <Headerbar>\n        <ul className=\"app-lists\">\n          <li key=\"1\"><Link to=\"/\" className=\"app-list\" >HOME</Link></li>\n          <li key=\"2\"><Link to=\"/work\" className=\"app-list\">WORK</Link></li>\n          <li key=\"3\"><Link to=\"/skill\" className=\"app-list\">SKILL</Link></li>\n          <li key=\"4\"><Link to=\"/about\" className=\"app-list\">ABOUT</Link></li>\n        </ul>\n      </Headerbar>\n    );\n  }\n}\n\n\n\nexport { AppBar };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Work } from './components/work';\nimport { Skills } from './components/skill';\nimport { About } from './components/about';\nimport { Home } from './components/home';\nimport { AppBar } from './appbar.js';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <AppBar />\n    <Route exact path='/' component={Home} />\n    <Route exact path='/work' component={Work} />\n    <Route exact path='/skill' component={Skills} />\n    <Route path='/About' component={About} />\n  </Router>\n    ,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\n\n\nfunction Home() {\n  return (\n    <div>\n      <h1>My Portfolio</h1>\n      <p>React学習の成果物として作成しました</p>\n    </div>\n  );\n}\n\nexport { Home };\n"],"sourceRoot":""}